name: "build"
on:
  push:
    branches:
      - main
      - CI
      - master
  workflow_dispatch:

jobs:
  check-version:
    name: Version Checking
    runs-on: ubuntu-latest
    outputs:
      project_version: ${{ steps.project_version.outputs.version }}
      tag: ${{ steps.tag.outputs.tag }}
    steps:
       - name: checkout
         uses: actions/checkout@v4

       - name: get Git tag
         id: tag
         run: | 
          tag=$(git tag -l --sort -v:refname | head -n 1 | cut -b 2-)
          echo $tag
          echo "tag=$tag" >> "$GITHUB_OUTPUT"

       - name: get Project Version
         id: project_version
         run: |
          version=$(cargo metadata --no-deps --format-version 1 | jq ".packages[].version")
          echo $version
          echo "version=$version" >> "$GITHUB_OUTPUT"
  
  build:
    name: Build
    permissions: write-all
    strategy:
      matrix:
        os: 
          - windows-latest
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    needs: check-version
    if: ${{ needs.check-version.outputs.project_version != needs.check-version.outputs.tag }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      
      - name: Rust cache
        uses: swatinem/rust-cache@v2

      - name: Build Project
        run: cargo build --release

      - name: Release
        uses: softprops/action-gh-release@v1
        with:  
          files: |
            target/release/y86fmt*.exe
          draft: false
          prerelease: false
          tag_name: v${{ needs.check-version.outputs.project_version }}